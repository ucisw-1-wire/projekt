////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : temperatureSystem.vf
// /___/   /\     Timestamp : 06/02/2015 17:40:17
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan3e -verilog C:/Users/admin/Downloads/1WIRETEMP/projekt-master/v5/temperatureSystem.vf -w C:/Users/admin/Downloads/1WIRETEMP/projekt-master/v5/temperatureSystem.sch
//Design Name: temperatureSystem
//Device: spartan3e
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module sequenceTestSchema_MUSER_temperatureSystem(Clk_50MHz, 
                                                  start, 
                                                  busy, 
                                                  output_data, 
                                                  test_out, 
                                                  OW_DQ);

    input Clk_50MHz;
    input start;
   output busy;
   output [23:0] output_data;
   output [3:0] test_out;
    inout OW_DQ;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_5;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_14;
   wire XLXN_15;
   wire [7:0] XLXN_16;
   wire [7:0] XLXN_17;
   wire XLXN_18;
   wire XLXN_26;
   wire XLXN_27;
   wire XLXN_28;
   
   modul  XLXI_1 (.clk(Clk_50MHz), 
                 .wire_in(XLXN_27), 
                 .writeOne(XLXN_6), 
                 .writeRead(XLXN_4), 
                 .writeReset(XLXN_3), 
                 .writeZero(XLXN_5), 
                 .busy(XLXN_10), 
                 .readBit_detecion(XLXN_8), 
                 .wire_out(XLXN_26));
   readByte  XLXI_2 (.clk(Clk_50MHz), 
                    .isBusy(XLXN_10), 
                    .readBit_detecion(XLXN_8), 
                    .start(XLXN_2), 
                    .busy(XLXN_15), 
                    .data(XLXN_17[7:0]), 
                    .read_bit(XLXN_4));
   writeByte  XLXI_3 (.clk(Clk_50MHz), 
                     .data(XLXN_16[7:0]), 
                     .isBusy(XLXN_10), 
                     .start(XLXN_1), 
                     .busy(XLXN_14), 
                     .writeOne(XLXN_6), 
                     .writeZero(XLXN_5));
   tempRead  XLXI_4 (.clk(Clk_50MHz), 
                    .inputData(XLXN_17[7:0]), 
                    .isBusy(XLXN_18), 
                    .readBit_detection(XLXN_8), 
                    .start(start), 
                    .wire_in(), 
                    .busy(busy), 
                    .outputData(XLXN_16[7:0]), 
                    .startRead(XLXN_2), 
                    .startReset(XLXN_3), 
                    .startWrite(XLXN_1), 
                    .tempData(output_data[23:0]), 
                    .test_out(test_out[3:0]));
   OR3  XLXI_5 (.I0(XLXN_10), 
               .I1(XLXN_15), 
               .I2(XLXN_14), 
               .O(XLXN_18));
   (* IOSTANDARD = "DEFAULT" *) (* SLEW = "SLOW" *) (* DRIVE = "12" *) (* 
         IBUF_DELAY_VALUE = "0" *) (* IFD_DELAY_VALUE = "AUTO" *) 
   IOBUF  XLXI_7 (.I(XLXN_28), 
                 .T(XLXN_26), 
                 .O(XLXN_27), 
                 .IO(OW_DQ));
   GND  XLXI_8 (.G(XLXN_28));
endmodule
`timescale 1ns / 1ps

module temperatureSystem(Clk_50MHz, 
                         clkout, 
                         output_led, 
                         VGA_B, 
                         VGA_G, 
                         VGA_HS, 
                         VGA_R, 
                         VGA_VS, 
                         OW_DQ);

    input Clk_50MHz;
   output clkout;
   output [3:0] output_led;
   output VGA_B;
   output VGA_G;
   output VGA_HS;
   output VGA_R;
   output VGA_VS;
    inout OW_DQ;
   
   wire [23:0] XLXN_1;
   wire [7:0] XLXN_3;
   wire [7:0] XLXN_4;
   wire XLXN_5;
   wire [7:0] XLXN_6;
   wire [2:0] XLXN_7;
   wire [7:0] XLXN_8;
   wire [8:0] XLXN_10;
   wire [9:0] XLXN_12;
   wire XLXN_37;
   wire clkout_DUMMY;
   
   assign clkout = clkout_DUMMY;
   sequenceTestSchema_MUSER_temperatureSystem  XLXI_1 (.Clk_50MHz(Clk_50MHz), 
                                                      .start(XLXN_37), 
                                                      .busy(clkout_DUMMY), 
                                                      
         .output_data(XLXN_1[23:0]), 
                                                      
         .test_out(output_led[3:0]), 
                                                      .OW_DQ(OW_DQ));
   controler  XLXI_2 (.clock(Clk_50MHz), 
                     .input_data(XLXN_1[23:0]), 
                     .is_read_busy(clkout_DUMMY), 
                     .adres(XLXN_4[7:0]), 
                     .output_data(XLXN_3[7:0]), 
                     .start_read(XLXN_37), 
                     .write_en(XLXN_5));
   Memory  XLXI_3 (.adres_rd(XLXN_8[7:0]), 
                  .adres_wr(XLXN_4[7:0]), 
                  .clock(Clk_50MHz), 
                  .input_data(XLXN_3[7:0]), 
                  .write_en(XLXN_5), 
                  .output_data(XLXN_6[7:0]));
   displayControler  XLXI_4 (.clk(Clk_50MHz), 
                            .disp_col(XLXN_12[9:0]), 
                            .disp_row(XLXN_10[8:0]), 
                            .input_data(XLXN_6[7:0]), 
                            .mem_adres(XLXN_8[7:0]), 
                            .rgb(XLXN_7[2:0]));
   VGA  XLXI_5 (.clk(Clk_50MHz), 
               .colors_in(XLXN_7[2:0]), 
               .reset(), 
               .b(VGA_B), 
               .column(XLXN_12[9:0]), 
               .g(VGA_G), 
               .hsync(VGA_HS), 
               .r(VGA_R), 
               .row(XLXN_10[8:0]), 
               .vsync(VGA_VS));
endmodule
